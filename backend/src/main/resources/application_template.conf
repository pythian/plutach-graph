# Configure Akka HTTP: http://doc.akka.io/docs/akka-http/current/scala/http/configuration.html
akka.http {
  server {
    # Adds the `Remote-Address` header to a client's isRequested. The header contains the IP address of the requesting machine. Note that this might also be a proxy's IP
    remote-address-header = on
    # This avoids an `EntityStreamSizeException` when the client sends data to the server using a form, for example
    parsing.max-content-length = infinite
  }
}

akka {
  # Make Akka use SLF4J for logging: http://doc.akka.io/docs/akka/current/scala/logging.html#SLF4J
  # This requires a dependency on akka-slf4j: https://mvnrepository.com/artifact/com.typesafe.akka/akka-slf4j_2.12
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

app {
  pipelines {
    AshPipeline: true,
    DummyPipeline: false,
    TwitterPipeline: false,
    SmallTestPipeline: false
  }
  twitter {
    topN = 10
    minCount = 1
  }
  twitter {
    consumerKey = ""
    consumerSecret = ""
    accessToken = ""
    accessTokenSecret = ""
  }
}